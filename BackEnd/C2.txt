from flask import Flask, request, jsonify
import joblib
import numpy as np
from flask_cors import CORS

app = Flask(__name__)
CORS(app)  # Enable CORS

# Load the trained model
model = joblib.load("saved_models/best_traditional_model.pkl")

@app.route('/')
def home():
    return "PCOS Risk Prediction API is running!"

@app.route('/predict', methods=['POST'])
def predict():
    try:
        data = request.get_json()

        if "features" not in data:
            return jsonify({"error": "Missing 'features' key in request"}), 400
        
        features = np.array(data["features"]).reshape(1, -1)
        prediction = model.predict(features)
        
        # Check if the model supports probability prediction
        if hasattr(model, "predict_proba"):
            probabilities = model.predict_proba(features).tolist()
            return jsonify({"risk_level": int(prediction[0]), "confidence": probabilities})
        
        return jsonify({"risk_level": int(prediction[0])})
    
    except Exception as e:
        return jsonify({"error": str(e)}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000, debug=True)
